@use 'sass:math';
@use 'conf';
@use 'func';

.custom-media {
	$media: &;

	&--eyesight-check {
		#{$media} {
			&__row {
				display: flex;
				gap: math.div(30, 16) + rem;

				@media (max-width: #{conf.$m - 1}) {
					flex-direction: column;
				}
			}

			&__col {
				&--infoblock {
					@media (max-width: #{conf.$m - 1}) {
						order: 2;
					}

					@media (min-width: conf.$m) and (max-width: #{conf.$xl - 1}) {
						width: calc(50% - #{math.div(30, 16) + rem} / 2);
					}

					@media (min-width: conf.$xl) {
						flex-grow: 1;
						width: calc(
							#{math.div(
									func.strip-unit(conf.$xl - 350px),
									func.strip-unit(
										math.div(
											conf.$xl - func.strip-unit(conf.$container-padding-x * 2) *
												conf.$font-size-root,
											100
										)
									)
								) * 1%}
						);
					}
				}

				&--media {
					@media (max-width: #{conf.$m - 1}) {
						order: 1;
					}

					@media (min-width: conf.$m) and (max-width: #{conf.$xl - 1}) {
						width: calc(50% - #{math.div(30, 16) + rem} / 2);
					}

					@media (min-width: conf.$xl) {
						flex-shrink: 0;
						width: calc(
							#{math.div(
									func.strip-unit(350px),
									func.strip-unit(
										math.div(
											conf.$xl - func.strip-unit(conf.$container-padding-x * 2) *
												conf.$font-size-root,
											100
										)
									)
								) * 1%}
						);
					}
				}
			}

			&__title {
				font-weight: 700;
				font-size: math.div(28, 16) + rem; /* ~18px */
				margin: 0;

				@media (max-width: #{conf.$m - 1}) {
					text-align: center;

					&:not(:first-child) {
						margin-block-start: 1em;
					}

					&:not(:last-child) {
						margin-block-end: 1em;
					}
				}

				@media (min-width: conf.$m) {
					text-align: start;

					&:not(:first-child) {
						margin-block-start: math.div(31, 28) + em;
					}

					&:not(:last-child) {
						margin-block-end: math.div(31, 28) + em;
					}
				}
			}

			&__list {
				text-align: start;
				margin: 0;
				padding: 0;
				padding-inline-start: math.div(10, 16) + rem;
				list-style-position: inside;
				font-weight: 400;
				font-size: math.div(18, 16) + rem;
				line-height: math.div(29, 18);
			}

			&__picture {
				overflow: hidden;
				display: flex;
				justify-content: center;
				align-items: center;
				aspect-ratio: 4096 / 2734;
				border-radius: math.div(10, 16) + rem;

				&-img {
					object-fit: cover;
					width: 100%;
					height: 100%;
				}
			}
		}
	}

	&--eyesight-check-2 {
		#{$media} {
			&__tile {
				display: flex;
				background-color: conf.$wild-sand;
				border-radius: math.div(20, 16) + rem;

				@media (max-width: #{conf.$m - 1}) {
					flex-direction: column;
				}

				@media (min-width) {
					column-gap: math.div(20, 16) + rem;
				}

				@media (min-width: conf.$xl) {
					min-height: math.div(522, 16) + rem;
				}
			}

			&__infoblock {
				padding: math.div(30, 16) + rem;

				@media (min-width: conf.$m) {
					width: calc(58% - 10px);
				}
			}

			&__picture-wrapper {
				display: flex;
				flex-direction: column;
				overflow: hidden;

				@media (max-width: #{conf.$m - 1}) {
					order: -1;
					aspect-ratio: 4096 / 2735;
					border-radius: math.div(20, 16) + rem math.div(20, 16) + rem 0 0;

					// Remember about order: -1
					&:first-child {
						border-radius: math.div(20, 16) + rem;
					}
				}

				@media (min-width: conf.$m) {
					width: calc(42% - 10px);
					@at-root :root:not([dir='rtl']) & {
						border-radius: 0 math.div(20, 16) + rem math.div(20, 16) + rem 0;
					}

					@at-root :root[dir='rtl'] & {
						border-radius: math.div(20, 16) + rem 0 0 math.div(20, 16) + rem;
					}
				}
			}

			&__picture {
				display: flex;
				flex-direction: column;
				align-items: center;
				justify-content: center;
				overflow: hidden;
				width: 100%;
				height: 100%;

				&-img {
					width: 100%;
					height: 100%;
					object-fit: cover;
				}
			}

			&__title {
				@media (max-width: #{conf.$m - 1}) {
					text-align: center;
				}

				@media (min-width: conf.$m) {
					text-align: start;
				}

				display: -webkit-box;
				-webkit-line-clamp: 2;
				-webkit-box-orient: vertical;
				overflow: hidden;
				text-overflow: ellipsis;
				word-break: break-all;
				font-size: math.div(28, 16) + rem;
				font-weight: 700;
				line-height: math.div(36, 28);
				margin: 0;

				&:not(:first-child) {
					margin-block-start: math.div(30, 28) + em;
				}

				&:not(:last-child) {
					margin-block-end: math.div(30, 28) + em;
				}

				&-overflow {
					min-height: math.div(30, 18) + em;

					&:empty {
						&::before {
							font-weight: 300;
							font-style: italic;
							content: 'Numeral list item text not seted';

							@at-root :root[lang='ru'] & {
								content: 'Тест нумерованого списка не задан';
							}
						}
					}
				}
			}

			&__text {
				font-size: math.div(18, 16) + rem;
				line-height: math.div(30, 18);
				text-align: start;

				&:not(:first-child) {
					margin-block-start: math.div(20, 16) + em;
				}

				&:not(:last-child) {
					margin-block-end: math.div(20, 16) + em;
				}
			}

			&__list {
				list-style-position: inside;
				padding: 0;
				margin: 0;
				padding-inline-start: math.div(8, 18) + em;

				&-item {
					min-height: math.div(30, 18) + em;

					&:empty {
						&::before {
							font-weight: 300;
							font-style: italic;
							content: 'Numeral list item text not seted';

							@at-root :root[lang='ru'] & {
								content: 'Тест нумерованого списка не задан';
							}
						}
					}
				}
			}

			&__paragraph {
				margin: 0;
				min-height: math.div(30, 18) + em;

				&:empty {
					&::before {
						font-weight: 300;
						font-style: italic;
						content: 'Paragraph text not seted';

						@at-root :root[lang='ru'] & {
							content: 'Текст параграфа не задан';
						}
					}
				}
			}

			&__list,
			&__paragraph {
				&:not(:first-child) {
					margin-block-start: math.div(30, 18) + em;
				}

				&:not(:last-child) {
					margin-block-end: math.div(30, 18) + em;
				}
			}

			&__actions {
				display: flex;
				justify-content: center;

				&:not(:empty) {
					&:not(:first-child) {
						margin-block-start: math.div(30, 16) + rem; /* 30px */
					}
				}
			}

			&__action {
				min-width: math.div(330, 16) + em; /* ~330px */
			}
		}
	}
}
