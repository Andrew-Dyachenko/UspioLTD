@use 'sass:color';
@use '../conf';
@use '../conf/fibonacci';
@import '../bootstrap/bootstrap-import--fvm';

@mixin form-variant($color, $color-hover: color-yiq($color), $active-background: $color, $active-border: $color) {
	color: $color;
	border-color: $color;

	// @include hover() {
	// 	color: $color-hover;
	// 	background-color: $active-background;
	// 	border-color: $active-border;
	// }

	&:focus,
	&.focus {
		box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
		border-color: $active-border;
	}

	&.disabled,
	&:disabled {
		// color: $color;
		background-color: transparent;
		cursor: not-allowed;
		border-color: color.change($active-border, $saturation: fibonacci.$asymp-xxl-percentage);
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		// color: color-yiq($active-background);
		// background-color: $active-background;
		border-color: $active-border;

		&:focus {
			@if $enable-shadows and $btn-active-box-shadow != none {
				@include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, 0.5));
			} @else {
				// Avoid using mixin so we can pass custom focus shadow properly
				box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
			}
		}
	}
}

// Button sizes
// @mixin form-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
// 	padding: $padding-y $padding-x;
// 	@include font-size($font-size);
// 	line-height: $line-height;
// 	// Manually declare to provide an override to the browser default
// 	@include border-radius($border-radius, 0);
// }
